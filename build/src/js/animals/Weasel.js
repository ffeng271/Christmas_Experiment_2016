
// import Spline from './libs/Spline';
import glmatrix from 'gl-matrix';

class Weasel {
  constructor(pos){
    this.vertices = [
      [555,594,0],[623,560,0],[651,526,0],[658,496,0],[648,484,0],[620,477,0],[574,478,0],[537,475,0],[495,459,0],[461,427,0],[443,383,0],[439,326,0],[443,277,0],[469,220,0],[510,194,0],[551,184,0],[576,180,0],[588,158,0],[587,153,0],[582,152,0],[584,156,0],[605,172,0],[619,172,0],[637,161,0],[649,138,0],[653,112,0],[647,88,0],[639,80,0],[636,83,0],[637,107,0],[644,122,0],[650,119,0],[649,98,0],[643,84,0],[638,80,0],[630,86,0],[619,93,0],[605,92,0],[600,85,0],[595,80,0],[584,85,0],[574,105,0],[573,129,0],[581,128,0],[589,117,0],[593,99,0],[590,85,0],[581,89,0],[574,120,0],[584,150,0],[598,162,0],[615,166,0],[634,156,0],[649,136,0],[644,128,0],[634,123,0],[627,128,0],[627,137,0],[632,139,0],[636,130,0],[630,126,0],[623,143,0],[620,151,0],[612,151,0],[608,145,0],[623,145,0],[627,149,0],[627,155,0],[614,160,0],[604,157,0],[615,154,0],[637,154,0],[633,165,0],[620,225,0],[617,261,0],[623,273,0],[635,284,0],[649,312,0],[634,313,0],[622,307,0],[613,294,0],[593,287,0],[571,279,0],[568,259,0],[568,249,0],[563,251,0],[568,259,0],[597,271,0],[624,252,0],[628,234,0],[615,212,0],[599,189,0],[587,187,0],[573,211,0],[575,229,0],[587,255,0],[592,273,0],[600,275,0],[676,253,0],[685,245,0],[683,238,0],[653,233,0],[619,247,0],[590,265,0],[566,267,0],[550,269,0],[520,289,0],[517,304,0],[521,305,0],[509,293,0],[494,287,0],[481,295,0],[469,328,0],[470,353,0],[496,376,0],[516,365,0],[531,347,0],[535,317,0],[523,294,0],[508,283,0],[492,282,0],[478,293,0],[470,321,0],[477,354,0],[485,371,0],[502,383,0],[527,387,0],[550,394,0],[563,401,0],[576,402,0],[576,392,0],[566,382,0],[544,378,0],[526,369,0],[507,360,0],[490,360,0],[483,369,0],[486,389,0],[510,416,0],[533,429,0],[560,429,0],[587,422,0],[632,402,0],[664,383,0],[688,378,0],[700,389,0],[699,409,0],[676,440,0],[638,465,0],[609,476,0],[578,475,0],[571,463,0],[600,426,0],[641,397,0],[683,372,0],[714,352,0]
    ]

    let minX = 10000;
    let maxX = 0;

    let minY = 10000;
    let maxY = 0;

    for (var i = 0; i < this.vertices.length; i++) {
      let v = this.vertices[i];
      if(v[0] < minX) minX = v[0]
      if(v[0] > maxX) maxX = v[0]

      if(v[1] < minY) minY = v[1]
      if(v[1] > maxY) maxY = v[1]
    }

    let wX = maxX - minX;
    let wY = maxY - minY;
    let w = Math.max(wX, wY)

    this.tick = 0;

    for (var i = 0; i < this.vertices.length; i++) {

			this.tick++;

			this.vertices[i][0] /= (w / 2);
			// this.vertices[i][0] *= 2;
			this.vertices[i][1] /= (w/2);
			// this.vertices[i][1] *= 2;
			this.vertices[i][2] = Math.cos(this.tick/10) * .4;
			// this.vertices[i][0] -= 2;
			this.vertices[i][1] -= 1.8;
			this.vertices[i][0] -= 1;
		}




    this.position = pos || [0,-3, 0];
    this.m = glmatrix.mat4.create();
    this.mRX = glmatrix.mat4.create();
    this.mRY = glmatrix.mat4.create();


    // console.log(this.mR);
  }

  rotateX(rx){
    // console.log("here", rx);
		glmatrix.mat4.scalar.rotateX(this.mRX, this.mRX, rx + Math.PI/2)
	}

	rotateY(ry){
    // console.log("here", ry);
		glmatrix.mat4.scalar.rotateY(this.mRY, this.mRY, ry - Math.PI/2)
	}

  getPoints(){
    let v = this.vertices.slice();

    // glmatrix.mat4.translate(this.m, this.m,  this.position);
    // glmatrix.mat4.scalar.rotateY(this.m, this.m, Math.PI)

    glmatrix.mat4.multiply(this.m, this.mRX, this.mRY);

    for (var i = 0; i < v.length; i++) {
      // console.log(v[i]);
      glmatrix.vec3.transformMat4(v[i], v[i], this.m);
      // console.log(v[i]);
    }


    return v;
  }
}

export default Weasel;
